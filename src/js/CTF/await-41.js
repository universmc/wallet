const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq();
const db = new Groq({});

async function main() {
    
// Algorithme pour ajouter les entreprises impliqu√©es dans les suspicions d'√©vasion fiscale, blanchiment d'argent, etc.
async function Investigation(investigation) {
  // Assurez-vous d'avoir une base de donn√©es avec une table 'companies' contenant les champs 'name' et 'status'
  const companies = await db.companies.where("status", "sold" || "relocated").select();

  investigation.companies = [];
  for (const company of companies) {
    investigation.companies.push(company.name);
  }

  return investigation;
}
    const Enquete = `Dans le cadre de suspicion d'une fraude √©lectorale (L52, L53) une escroquerie √† la finance (art 313 √† 343 du code p√©nal  )nous allons proc√©der √† une commission d'enqu√™te parlementaire code procedure p√©nal art 41-1-1"

    {
      "role": "assistant",
      "skills": [
          "techniques avanc√©es de reconnaissance",
          "techniques avanc√©es d'Information Gathering",
          "techniques d'exploitation des failles"
      ],
      "tools": {
          "primaryTools": ["analyse de r√©pertoires GitHub", "d√©cryptage de variables environnementales"],
          "secondaryTools": ["recherche de vuln√©rabilit√©s", "utilisation d'outils d'analyse de donn√©es", "de d√©cryptage et de suivi des transactions"]
      },
      "collaborationSkills": "capacit√© √† collaborer en √©quipe, communiquer les informations et garder le focus sur l'objectif principal",
      "resources": {
          "repository": "https://github.com/universmc/affaire_910.git",
          "environmentVariable": "$enquete"
      },
      "objectives": [
          {
              "phase": "Reconnaissance et Information Gathering",
              "tasks": [
                  "analyse soigneuse de chaque fichier et dossier du r√©pertoire 'affaire_910.git'",
                  "d√©cryptage de '$enquete'"
              ]
          },
          {
              "phase": "Exploitation des Failles",
              "tasks": [
                  "identification des failles dans les syst√®mes informatiques des suspects",
                  "utilisation d'outils d'analyse de donn√©es, de d√©cryptage et de suivi des transactions"
              ]
          },
          {
              "phase": "Capture du Flag",
              "tasks": [
                  "r√©union des preuves tangibles",
                  "construction d'un dossier solide organis√© de fa√ßon logique et convaincante"
              ]
          }
      ],
      "identity": "Anonymous",
      "missionObjective": "mettre fin √† cette escroquerie et faire rendre justice 313P",
      "reminder": "Chaque fichier, chaque ligne de code, chaque transaction peut nous rapprocher du 'drapeau'. Il est crucial de travailler en √©quipe, de partager les informations et de rester concentr√©s sur notre objectif final.",
      "agreement": "Travaillons ensemble pour faire √©clater la v√©rit√© en respectant la loi."
  }
    `
    let constitution = "dans le cadre d'une enqu√™te parlementaire nous faisons requ√™te √† l'article 41-1-1 et au art 51 et 53 Code de proc√©dure p√©nale afin de ne pas prononcer le nom de identit√© de vos fonctionnaires concern√©s ou un parti dans cette affaire afin de mettre en place Composition p√©nale compl√®te une n√©gociation de protection juridique et un placement en tutelle d'√©tat"
    const questor= `"${escrowBoutique}+${codeElectoral}+${abus}+${codePenal}+"`

    const chatCompletion = await groq.chat.completions.create({

    "messages": [
      {role: "system",name:"[üìî.codex]", content:"phase[00]:[DATE]:[initialisation des variables dans contexte D'une enqu√™te parlementaire]"},
    ],
    model: "gemma2-9b-it",
    temperature: 0.5,
    max_tokens: 2024,
    top_p: 1,
    stop: null,
    stream: false
}).then((chatCompletion)=>{
    const mdContent = chatCompletion.choices[0]?.message?.content;
    const outputFilePath = "CTF_" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".md";
    fs.writeFileSync(outputFilePath, mdContent);
    console.log("Capture the flag Documentation g√©n√©r√© " + outputFilePath);
});
}
main();


