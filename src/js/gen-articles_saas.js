// Importation des modules n√©cessaires
const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq({ apiKey: process.env.GROQ_API_KEY });

/**
 * G√©n√®re une liste de th√©matiques via le r√¥le system.
 * @returns {Promise<string[]>} - Liste des th√©matiques g√©n√©r√©es.
 */

  const saas = `
  {
"title": "Gestionnaire de SAAS en Freelance",
"objective": "G√©rer et optimiser l'utilisation de solutions en tant que prestataire ind√©pendant pour les clients .",
¬´ contraintes ¬ª : [
"Ma√Ætriser plusieurs solutions logicielles et leur int√©gration entre elles",
"Assurer une communication claire et r√©guli√®re avec les clients",
"G√©rer son temps et ses projets de mani√®re autonome"
],
"acteurs": [
{
"nom": "Client",
"role": "Demandeur de services de gestion de solutions SAAS"
},
{
"nom": "Prestataire",
"role": "Fournisseur de services de gestion de solutions SAAS"
}
],
"io": {
¬´ entr√©es ¬ª : [
"Cahier des charges et besoins du client",
"Acc√®s aux solutions logicielles utilis√©es"
],
¬´ sorties ¬ª : [
"Configurations et optimisations des solutions SAAS pour les clients",
"Rapports de progr√®s et de performances"
]
},
¬´ cas d'utilisation ¬ª : [
{
"name": "Int√©gration de plusieurs solutions logicielles",
"description": "Le gestionnaire de SAAS assure l'int√©gration de diff√©rentes applications pour optimiser les processus m√©tiers du client"
},
{
"name": "Formation et support utilisateur",
"description": "Le gestionnaire de SAAS forme et accompagne les utilisateurs aux nouvelles solutions mises en place"
}
],
¬´ r√®gles commerciales ¬ª : [
"√âtablir un contrat de prestation de services clair avec le client",
"Respecter les d√©lais et les co√ªts budg√©taires pour chaque projet",
"Garantir la confidentialit√© des donn√©es et des informations sensibles du client"
],
¬´ terminologie ¬ª : {
"SAAS": "Sigle anglais pour Software as a Service, ou Logiciel en tant que Service",
"Freelance": "Statut de travailleur ind√©pendant, sans lien de subordination avec ses clients"
},
"notes": [
"Le gestionnaire de SAAS freelance doit √™tre capable d'adapter ses connaissances √† diff√©rents contextes et secteurs d'activit√©.",
"Un montage financier ad√©quat est n√©cessaire pour g√©rer les facturations, les charges sociales et les taxes applicables."
]
}
  `;
 const question = "comment augmenter en productivit√© gr√¢ce a des m√©thodes de DeeP Learning et l'automatisation de la g√©n√©ration de contenu ?"
async function generateThemes() {
  try {
    const completion = await groq.chat.completions.create({
      messages: [
        { role: "system", content: `G√©n√©ration d'une liste de 14 titres d'Article üí° pour la gestion sur le devellepement du ${saas} Models, la liste de titre sera utlis√© pour le developpement du theme de Article permetant de pr√©sentant les M√©thodes Phare pour Gagner de l'Argent EN LIGNE Gr√¢ce √† l'IA Pour D√©butants Point Valeur minimum 100‚Ç¨ par jour+` }
      ],
      model: "gemma2-9b-it",
      temperature: 0.5,
      max_tokens: 56, // Limiter pour obtenir une liste concise
    });

    const themes = completion.choices[0]?.message?.content.split("\n").filter(Boolean);
    console.log("‚úÖ Th√©matiques g√©n√©r√©es :", themes);
    return themes;
  } catch (error) {
    console.error("‚ùå Erreur lors de la g√©n√©ration des th√©matiques :", error);
    return [];
  }
}

/**
 * G√©n√®re un article complet en fonction d'une th√©matique via le r√¥le assistant.
 * @param {string} theme - La th√©matique pour laquelle g√©n√©rer l'article.
 * @returns {Promise<string>} - Contenu de l'article g√©n√©r√©.
 */
async function generateArticle(theme) {
  try {
    const completion = await groq.chat.completions.create({
      messages: [
        { role: "assistant", content: `G√©n√©ration de l'article en fonction des titres lier "${theme}" chaque article sera r√©dig√© au format, int√©grant des EMOJJ Intelligent et des conseils pour le d√©veloppement des diff√©rents services, li√©s √† l'intelligence artificielle dans l'article intrins√®quement li√© √† la ${question}.` }
      ],
      model: "mixtral-8x7b-32768",
      temperature: 0.5,
      max_tokens: 4096, // Autoriser un contenu riche et d√©taill√©
    });

    const articleContent = completion.choices[0]?.message?.content;
    console.log(`‚úÖ Article g√©n√©r√© pour le th√®me "${theme}" :`, articleContent);
    return articleContent;
  } catch (error) {
    console.error(`‚ùå Erreur lors de la g√©n√©ration de l'article pour "${theme}" :`, error);
    return `Erreur lors de la g√©n√©ration de l'article pour le th√®me "${theme}".`;
  }
}

/**
 * Fonction principale pour orchestrer la g√©n√©ration des th√©matiques et des articles.
 */
async function main() {
  try {
    // G√©n√©ration de la liste des th√©matiques
    const themes = await generateThemes();

    // G√©n√©ration des articles pour chaque th√©matique
    for (const theme of themes) {
      const articleContent = await generateArticle(theme);

      // Enregistrement de l'article dans un fichier Markdown
      const outputFilePath = `articles/${theme.replace(/\s+/g, "_").toLowerCase()}_${new Date().toISOString().replace(/[-:TZ]/g, "")}.md`;
      fs.writeFileSync(outputFilePath, articleContent);

      console.log(`‚úÖ Article sauvegard√© : ${outputFilePath}`);
    }
  } catch (error) {
    console.error("‚ùå Une erreur s'est produite lors de l'ex√©cution du script :", error);
  }
}

main();
